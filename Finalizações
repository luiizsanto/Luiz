TÓPICOS A SEREM TRATADOS

# Exercícios simples SQL

## Exercício 1

Você é Analista de Customer Experience (Experiência do Cliente) e precisa criar um relatório com os 100 primeiros clientes da história da empresa.
Esses clientes receberão uma placa em reconhecimento à confiança dada.
Você precisa levantar essa lista de clientes dentro do banco de dados, em 10 minutos, pois o seu gestor solicitou essa informação para apresentar em uma reunião.

SELECT TOP (100) * FROM DimCustomer -- selecionar top 100
where CustomerType <> 'Company' -- excluindo as empresas, deixando apenas clientes físicos
order by dateFirstPurchase -- ordem crescente
;
----------------------------------------------------------------------------------------------------------------
## Exercício 2

Você é Analista de Produtos e precisa levantar algumas informações sobre os produtos, como:
-- Quantidade de Produtos
-- Soma total de peso dos produtos
-- Preço Médio dos Produtos
-- Maior Preço
-- Menor Preço

SELECT 
	COUNT(ProductName) as 'Qnt total',
	SUM(Weight) as 'Peso total',
	AVG(UnitPrice) as 'Média de preço',
	MAX(UnitPrice) as 'Preço máximo',
	MIN(UnitPrice) as 'preço mínimo'
FROM DimProduct;
----------------------------------------------------------------------------------------------------------------
# Exercício 3

Você agora é um Analista de RH da empresa e precisa saber a quantidade total de funcionários de cada departamento pois o 
Financeiro depende desse entendimento para dimensionar gastos para cada um dos departamentos, como bonificações, computadores, 
equipamentos de forma geral. Utilize seus conhecimentos para dar suporte à área financeira.

SELECT            -- Seleciona o nome do departamento e a contagem de funcionários para cada departamento
    DepartmentName,          -- Coluna que representa o nome do departamento
    COUNT(DepartmentName)  as 'Funcionários por Departamento'     -- Função COUNT para contar o número de funcionários em cada departamento
FROM 
    DimEmployee               -- Tabela de funcionários
GROUP BY 
    DepartmentName           -- Agrupa os resultados pela coluna 'DepartmentName'
ORDER BY 
	COUNT(DepartmentName) DESC
	;
----------------------------------------------------------------------------------------------------------------
/*
EXERCÍCIO 1. Você é responsável por controlar os dados de clientes e produtos da sua empresa.
o que você precisará fazer é confirmar se:

a. Existem 2517 produtos cadastrados na base, e se não tiver, vc deverá reportar ao seu gestor para saber se existe alguma defasagem no controle de produtos.

b. Até mês passado, a empresa tinha um total de 19500 clientes na base de controle. Verifique se esse número aumentou ou reduziu.
*/

-- a.
Select distinct ProductKey FROM DimProduct
order by ProductKey desc;

--b
select * from DimCustomer; -- o número de linhas é menor, portanto temos menos de 19500 clientes
----------------------------------------------------------------------------------------------------------------
# Integração Python 

--  NO SQL:

CREATE DATABASE PythonSQL         -- criar banco de dados
#########################################
USE PythonSQL                  -- cria uma tabela com essas colunas, porém sem linhas
CREATE TABLE Vendas(
    id_venda int,
    cliente varchar(50),
    produto varchar(50),
    data_venda date,
    preco decimal(6, 2),
    quantidade int,
    )
#########################################
INSERT INTO Vendas(id_venda, cliente, produto, data_venda, preco, quantidade)     -- adiciona uma linha
VALUES
    (1, 'Lira', 'PC', '15/02/2021', 8000, 1)
INSERT INTO Vendas(id_venda, cliente, produto, data_venda, preco, quantidade)     -- adiciona uma linha
VALUES
    (1, 'Luiz', 'celular', '16/02/2021', 7000, 1)
#########################################
AGORA EM PYTHON:

import pyodbc
-- nterface de programação que permite a comunicação entre aplicativos escritos em Python e bancos de dados 

dados_conexao = (
    "Driver={SQL Server};"
    "Server=Luiz;"
    "Database=PythonSQL;"
)

conexao = pyodbc.connect(dados_conexao)
print("Conexão bem sucedida")

#rodar comando SQL dentro do py

cursor = conexao.cursor()   #criação de query


comando = """INSERT INTO Vendas(id_venda, cliente, produto, data_venda, preco, quantidade)     -- adiciona uma linha com mais informações de clientes
VALUES
    (3, 'Carlos', 'fone de ouvido', '16/02/2021', 500, 1)""" # comando no SQL

cursor.execute(comando) #executar o comando
cursor.commit() # adicionar a mudança
----------------------------------------------------------------------------------------------------------------
# Integração Excel

Youtube channel: Marketing Analytics with OWOX: https://www.youtube.com/@marketinganalyticswithowox2118

# OWOX BI (Business Intelligence) é uma plataforma que oferece recursos avançados de análise de dados e visualização para ajudar as empresas a obter insights significativos a partir de suas informações.
----------------------------------------------------------------------------------------------------------------
# Teste de uma API (SQL - Python)

import os
from google.cloud import bigquery
os.environ['GOOGLE_APPLICATION_CREDENTIALS'] = 'luiz-560' # NOME ERRADOOO

client = bigquery.Client()

sql_query = """
select station_id, name, dockcount
from `bigquery-public-data.san_francisco.bikeshare_stations`
limit 50
"""

query_job = client.query(sql_query)
for row in query_job.result():
    print(row)


----------------------------------------------------------------------------------------------------------------
